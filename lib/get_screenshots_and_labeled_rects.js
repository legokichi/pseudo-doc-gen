// Generated by CoffeeScript 1.11.0
(function() {
  
var fs = require("fs");


// fs APIはコールバックを取るので現代的にPromiseに変換する
// function asynchronous<T, U, V>(fn: (...args: T)=> U, ctx: V): (...args: T)=> Promise<U>
function asynchronous(fn, ctx){
  return function _asyncFn(){
    var args = Array.prototype.slice.call(arguments);
    return new Promise(function(resolve, reject){
      fn.apply(ctx, args.concat(function(err, val){
        if(err){
          reject(err);
        }else{
          resolve(val);
        }
      }));
    });
  };
}

fs.writeFileAsync = asynchronous(fs.writeFile, fs);
;
  var OUTPUT_DIR, page;

  OUTPUT_DIR = "output/";

  page = require('webpage').create();

  page.viewportSize = {
    width: 1200,
    height: 800
  };

  page.onLoadFinished = function() {
    var json, labeled_rects, prefix;
    labeled_rects = page.evaluate(function() {
      return {
        handwriting: Array.prototype.slice.call(document.querySelectorAll('[data-label="handwriting"]')).map(function(elm) {
          return elm.getBoundingClientRect();
        }),
        photo: Array.prototype.slice.call(document.querySelectorAll('[data-label="photo"]')).map(function(elm) {
          return elm.getBoundingClientRect();
        }),
        graph: Array.prototype.slice.call(document.querySelectorAll('[data-label="graph"]')).map(function(elm) {
          return elm.getBoundingClientRect();
        }),
        math: Array.prototype.slice.call(document.querySelectorAll('[data-label="math"]')).map(function(elm) {
          return elm.getBoundingClientRect();
        }),
        underline: Array.prototype.slice.call(document.querySelectorAll('[data-label="underline"]')).map(function(elm) {
          return elm.getBoundingClientRect();
        })
      };
    });
    console.log(json = JSON.stringify(labeled_rects, null, "  "));
    prefix = OUTPUT_DIR + Date.now();
    page.render(prefix + '_screenshot.png');
    fs.write(prefix + "_rect.json", json);
    console.log("end");
    return phantom.exit();
  };

  page.open('http://localhost:8080/');

}).call(this);
