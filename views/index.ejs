<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <meta http-equiv="cache-control" content="no-cache" />
  <meta http-equiv="pragma" content="no-cache" />
  <!--link rel="stylesheet" type="text/css" href="/font/AsobiMemogaki.css" /-->
  <link rel="stylesheet" type="text/less" href="<%- less %>" />
  <!--script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      skipStartupTypeset: true,
      extensions: ["tex2jax.js"],
      jax: ["input/TeX", "output/HTML-CSS"],
      tex2jax: {
        inlineMath: [ ['$','$'], ["\\(","\\)"] ],
        displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
        processEscapes: true
      },
      "HTML-CSS": {
        availableFonts: ["TeX"]
      },
      "TeX": {
        extensions: [
          "AMSmath.js",
          "AMSsymbols.js",
          "/xypic.js"
        ]
      }
    });
  </script-->
  <!--script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.6.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&delayStartupUntil=configured"></script-->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/less.js/2.7.1/less.min.js"></script>
</head>
<body>
  <div id="wrapper">
    <section id="content" class="markdown-body">
      <%- content %>
    </section>
  </div>
  <script>
    function getElms(selector){
      return Array.prototype.slice.call(document.querySelectorAll(selector));
    }
    function getRect(elm){
      var $elm = $(elm);
      var offset = $elm.offset();
      return {
        top: offset.top,
        left: offset.left,
        width: $elm.width(),
        height: $elm.height()
      };
    }
    /*
    MathJax.Hub.Configured();
    
    function typeset(callback){
      $(".lang-math-inline").map(function(i, elm){
        var code = $(elm).children().html()
          .replace(/\&amp;/g, "&")
          .replace(/\&lt;/g, "<")
          .replace(/\&gt;/g, ">");
        $(elm).after("$" + code + "$").remove();
      });
      $(".lang-math").map(function(i, elm){
        var code = $(elm).html()
          .replace(/\&amp;/g, "&")
          .replace(/\&lt;/g, "<")
          .replace(/\&gt;/g, ">");
        $(elm).parent().after("$$" + code + "$$").remove();
      });
      MathJax.Hub.Queue(
        ["Typeset", MathJax.Hub, document.body],
        [callback]
      );
    }*/
    $(window).on("load", function(){
      //typeset(function(){
        /*getElms('#content [data-label]').forEach(function(elm){
          var rect = getRect(elm);
          console.log(elm, rect);
          var top = rect.top;
          var left = rect.left;
          var width = rect.width;
          var height = rect.height;
          var div = document.createElement("div");
          div.style.display = "inline-block";
          div.style.position = "absolute";
          div.style.top = top + "px";
          div.style.left = left + "px";
          div.style.width = width + "px";
          div.style.height = height + "px";
          div.style.border = "1px solid black";
          document.body.appendChild(div);
        });*/
        window.__loaded__ = true;
        console.log("loaded");
      //});
    });
  </script>
</body>
</html>
